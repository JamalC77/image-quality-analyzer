{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamal\\\\OneDrive\\\\Documents\\\\Development\\\\Test Projects\\\\image-quality-analyzer\\\\src\\\\components\\\\FeedbackDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Styled components for the feedback display\nconst FeedbackContainer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80%;\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  z-index: 1000;\n`;\n_c = FeedbackContainer;\nconst MessageContainer = styled.div`\n  padding: 12px 20px;\n  border-radius: 8px;\n  background-color: ${props => {\n  switch (props.type) {\n    case 'error':\n      return 'rgba(220, 53, 69, 0.9)';\n    case 'warning':\n      return 'rgba(255, 193, 7, 0.9)';\n    case 'success':\n      return 'rgba(40, 167, 69, 0.9)';\n    case 'info':\n      return 'rgba(23, 162, 184, 0.9)';\n    default:\n      return 'rgba(52, 58, 64, 0.9)';\n  }\n}};\n  color: white;\n  font-weight: bold;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  animation: fadeIn 0.3s ease-in-out;\n  \n  @keyframes fadeIn {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n`;\n_c2 = MessageContainer;\nconst FeedbackDisplay = ({\n  messages\n}) => {\n  _s();\n  const [visibleMessages, setVisibleMessages] = useState([]);\n\n  // Manage the lifecycle of feedback messages\n  useEffect(() => {\n    // Add new messages to visible messages\n    if (messages.length > 0) {\n      const newVisibleMessages = [...visibleMessages];\n\n      // Add messages that aren't already in the visible list\n      messages.forEach(message => {\n        if (!visibleMessages.find(m => m.id === message.id)) {\n          newVisibleMessages.push(message);\n        }\n      });\n      setVisibleMessages(newVisibleMessages);\n    }\n  }, [messages]);\n\n  // Set up timers to remove messages after their duration\n  useEffect(() => {\n    // Create a map of timeouts for each message\n    const timeouts = new Map();\n\n    // Set up timeout for each message\n    visibleMessages.forEach(message => {\n      if (!timeouts.has(message.id)) {\n        const timeout = setTimeout(() => {\n          setVisibleMessages(prev => prev.filter(m => m.id !== message.id));\n        }, message.duration);\n        timeouts.set(message.id, timeout);\n      }\n    });\n\n    // Clean up timeouts on unmount\n    return () => {\n      timeouts.forEach(timeout => clearTimeout(timeout));\n    };\n  }, [visibleMessages]);\n  if (visibleMessages.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(FeedbackContainer, {\n    children: visibleMessages.map(message => /*#__PURE__*/_jsxDEV(MessageContainer, {\n      type: message.type,\n      children: message.message\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackDisplay, \"/YS4A2HXN91Dk8qtjR8AzzS4jss=\");\n_c3 = FeedbackDisplay;\nexport default FeedbackDisplay;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FeedbackContainer\");\n$RefreshReg$(_c2, \"MessageContainer\");\n$RefreshReg$(_c3, \"FeedbackDisplay\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","FeedbackContainer","div","_c","MessageContainer","props","type","_c2","FeedbackDisplay","messages","_s","visibleMessages","setVisibleMessages","length","newVisibleMessages","forEach","message","find","m","id","push","timeouts","Map","has","timeout","setTimeout","prev","filter","duration","set","clearTimeout","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/jamal/OneDrive/Documents/Development/Test Projects/image-quality-analyzer/src/components/FeedbackDisplay.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FeedbackDisplayProps, FeedbackMessage } from '../types';\r\n\r\n// Styled components for the feedback display\r\nconst FeedbackContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  z-index: 1000;\r\n`;\r\n\r\ninterface MessageContainerProps {\r\n  type: 'error' | 'warning' | 'success' | 'info';\r\n}\r\n\r\nconst MessageContainer = styled.div<MessageContainerProps>`\r\n  padding: 12px 20px;\r\n  border-radius: 8px;\r\n  background-color: ${props => {\r\n    switch (props.type) {\r\n      case 'error': return 'rgba(220, 53, 69, 0.9)';\r\n      case 'warning': return 'rgba(255, 193, 7, 0.9)';\r\n      case 'success': return 'rgba(40, 167, 69, 0.9)';\r\n      case 'info': return 'rgba(23, 162, 184, 0.9)';\r\n      default: return 'rgba(52, 58, 64, 0.9)';\r\n    }\r\n  }};\r\n  color: white;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  animation: fadeIn 0.3s ease-in-out;\r\n  \r\n  @keyframes fadeIn {\r\n    from { opacity: 0; transform: translateY(20px); }\r\n    to { opacity: 1; transform: translateY(0); }\r\n  }\r\n`;\r\n\r\nconst FeedbackDisplay: React.FC<FeedbackDisplayProps> = ({ messages }) => {\r\n  const [visibleMessages, setVisibleMessages] = useState<FeedbackMessage[]>([]);\r\n  \r\n  // Manage the lifecycle of feedback messages\r\n  useEffect(() => {\r\n    // Add new messages to visible messages\r\n    if (messages.length > 0) {\r\n      const newVisibleMessages = [...visibleMessages];\r\n      \r\n      // Add messages that aren't already in the visible list\r\n      messages.forEach(message => {\r\n        if (!visibleMessages.find(m => m.id === message.id)) {\r\n          newVisibleMessages.push(message);\r\n        }\r\n      });\r\n      \r\n      setVisibleMessages(newVisibleMessages);\r\n    }\r\n  }, [messages]);\r\n  \r\n  // Set up timers to remove messages after their duration\r\n  useEffect(() => {\r\n    // Create a map of timeouts for each message\r\n    const timeouts = new Map<string, NodeJS.Timeout>();\r\n    \r\n    // Set up timeout for each message\r\n    visibleMessages.forEach(message => {\r\n      if (!timeouts.has(message.id)) {\r\n        const timeout = setTimeout(() => {\r\n          setVisibleMessages(prev => prev.filter(m => m.id !== message.id));\r\n        }, message.duration);\r\n        \r\n        timeouts.set(message.id, timeout);\r\n      }\r\n    });\r\n    \r\n    // Clean up timeouts on unmount\r\n    return () => {\r\n      timeouts.forEach(timeout => clearTimeout(timeout));\r\n    };\r\n  }, [visibleMessages]);\r\n  \r\n  if (visibleMessages.length === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <FeedbackContainer>\r\n      {visibleMessages.map(message => (\r\n        <MessageContainer key={message.id} type={message.type}>\r\n          {message.message}\r\n        </MessageContainer>\r\n      ))}\r\n    </FeedbackContainer>\r\n  );\r\n};\r\n\r\nexport default FeedbackDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}